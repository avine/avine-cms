<?php
/* Copyright (C) 2008. All Rights Reserved. @license - Copyrighted Software. Author: StÃ©phane Francel */


// No direct access
defined( '_DIRECT_ACCESS' ) or die( 'Restricted access' );


// Path info
$path = admin_getPathway();


// Configuration
$start_view = true;
$session = new sessionManager(sessionManager::BACKEND, 'module_list');


// Images Html
$png_new = '<img src="'.WEBSITE_PATH.'/admin/images/new.png" alt="new" />';


// FTP of /modules directory
$ftp = new ftpManager(sitePath().'/modules/');



///////////
// Process

$filter = new formManager_filter();
$filter->requestVariable('post');


// Posted forms possibilities
$submit = formManager::isSubmitedForm('modlist_', 'post'); // (0)
if ($submit)
{
	$new = $filter->requestValue('new'	)->get(); // (1)
	$upd = $filter->requestName	('upd_'	)->get(); // (2) # Carefull: this time, do not validate the $upd variable here as usual! Because it have been encoded by: formManager::encodePoint() method
	$del = $filter->requestName ('del_'	)->get(); // (3)
} else {
	$new = false;
	$upd = false;
	$del = false;
}

$new_submit = formManager::isSubmitedForm('new_', 'post'); // (1)
$upd_submit = formManager::isSubmitedForm('upd_', 'post'); // (2)



// (3) Case 'del'
if ($del)
{
	if (($decoded_file_name = formManager::decodePoint($del)) && (formManager_filter::isFile($decoded_file_name)))
	{
		// DB
		if ($db->delete('module_list; where: file='.$db->str_encode($decoded_file_name))) {
			// FTP
			if ($ftp->isFile($decoded_file_name))
			{
				if ($ftp->delete($decoded_file_name)) {
					admin_informResult(true);
				} else {
					admin_message(LANG_ADMIN_COM_MODULE_LIST_DEL_FAILURE_FTP, 'error');
				}
			}
			else {
				admin_informResult(true);
			}			
		}
		else {
			admin_message(LANG_ADMIN_COM_MODULE_LIST_DEL_FAILURE_DB, 'error');
		}
	}
}



// (2) Case 'upd'
if ($upd_submit)
{
	// Current file name
	$current_file = $filter->requestValue('current_file')->get();

	// Updated file name
	$name 	= $filter->requestValue('name'	)->get();
	$ext 	= $filter->requestValue('ext'	)->get();
	$upd_file = "$name.$ext";

	// Check the updated file name !
	if ($upd_file != $current_file)
	{
		if ( !formManager_filter::isFile($upd_file, array('html', 'php')) ) {
			$filter->set($upd_file, 'name')->getError(LANG_ADMIN_COM_MODULE_LIST_ERROR_INVALID_FILENAME, LANG_ADMIN_COM_MODULE_LIST_NAME_EXTENSION);
		}
		elseif ($ftp->isFile($upd_file)) {
			$filter->set($upd_file, 'name')->getError(LANG_ADMIN_COM_MODULE_LIST_ERROR_FILE_EXISTS, LANG_ADMIN_COM_MODULE_LIST_NAME_EXTENSION);
		}
	}

	// Comment
	$upd_comment = $filter->requestValue('comment')->get();

	if ($upd_submit_validation = $filter->validated())
	{
		// DB update
		$result_db = $db->update('module_list; file='.$db->str_encode($upd_file).', comment='.$db->str_encode($upd_comment).'; where: file='.$db->str_encode($current_file));

		// Update references
		if ($upd_file != $current_file) {
			$db->update('module; mod_file='.$db->str_encode($upd_file).'; where: mod_file='.$db->str_encode($current_file)); # DB
			$ftp->rename($current_file, $upd_file); # FTP
		}

		// FTP update
		$result_ftp = $ftp->write($upd_file, $filter->requestValue('file_content')->get());

		admin_informResult($result_db && $result_ftp);

		if ($filter->requestValue('record')->get()) {
			$upd_submit_validation = false; # Stay in the update form !
		}
	}
	else {
		echo $filter->errorMessage();
	}
}
if ( ($upd) || ($upd_submit && !$upd_submit_validation) )
{
	$start_view = false;

	// File name
	if ($upd) {
		$decoded_file_name = $current_file = formManager::decodePoint($upd);
	} else {
		$decoded_file_name = $upd_file;
	}

	// Title
	echo '<h2>'.LANG_ADMIN_COM_MODULE_LIST_TITLE_UPDATE.'</h2>';

	$html = '';

	$form = new formManager();
	$html .= $form->form('post', $_SERVER['PHP_SELF'].$path, 'upd_');

	// Current file name
	$html .= $form->hidden('current_file', $current_file);

	$pathinfo = pathinfo($decoded_file_name);

	/*
	 * Change : the "Update file name" part has been disabled and replaced by "File name (view only)" part.
	 * We have change this to protect the name the modules wich are generated by com_menu (when creating a new menu).
	 */

	// Updated file name
	#$html .= $form->text('name', $pathinfo['filename'], LANG_ADMIN_COM_MODULE_LIST_NAME_EXTENSION.'<br />');
	#$html .= $form->select('ext', formManager::selectOption(array('html'=>'.html', 'php'=>'.php'), $pathinfo['extension'])).'<br /><br />';

	// File name (view only)
	$html .= "<p><strong>".LANG_ADMIN_COM_MODULE_LIST_MOD_NAME."</strong> $decoded_file_name</p>";
	$html .= $form->hidden('name', $pathinfo['filename']);
	$html .= $form->hidden('ext', $pathinfo['extension']);
	# End of (Change)

	// Comment
	$mod_list_comment = $db->selectOne('module_list, comment, where: file='.$db->str_encode($current_file), 'comment');
	$html .= $form->text('comment', $mod_list_comment, LANG_ADMIN_COM_MODULE_LIST_COMMENT.'<br />', '', 'maxlength=255').'<br /><br />';

	// File content
	$html .= $form->textarea('file_content', $file_content = $ftp->read($current_file), LANG_ADMIN_COM_MODULE_LIST_UPD_FILE_CONTENT.'<br />', '', 'cols=150;rows=30').'<br /><br />';

	$html .= $form->submit('submit', LANG_ADMIN_BUTTON_SUBMIT);
	$html .= $form->submit('record', LANG_ADMIN_BUTTON_RECORD);

	if (in_array($pathinfo['extension'], array('html', 'htm')) && $session->get('use_html_editor'))
	{
		// Use HTML editor to edit content
		$my_CKEditor = new loadMyCkeditor();
		$html .= $my_CKEditor->addName("file_content");
	}
	elseif (in_array($pathinfo['extension'], array('php')))
	{
		// Syntax highlighted for PHP file !
		$html .= '<div style="margin-top:15px; font-weight:bold; color:#999;">'.LANG_ADMIN_COM_FILE_HIGHLIGHT_SYNTAX_PHP.'</div>';
		$html .= '<div style="height:300px; overflow:auto; margin-bottom:15px; padding:10px; border:1px solid #CCC; border-left-width:5px; background-color:#FAFAFA;">';
		$html .= highlight_string($file_content, 1);
		$html .= '</div>';
	}

	$html .= $form->end();
	echo $html;
}



// (1) Case 'new'
if ($new_submit)
{
	$new_submit_validation = true;

	$filter->reset();

	// Fields validation
	$name	= $filter->requestValue('name')->getID(1, LANG_ADMIN_COM_MODULE_LIST_ERROR_INVALID_FILENAME);
	$ext	= $filter->requestValue('ext')->get();
	!in_array($ext, array('html', 'php')) ? $ext = 'html' : ''; # Security

	// File already exists !
	if ($ftp->isFile("$name.$ext")) {
		$filter->set("$name.$ext", 'name')->getError(LANG_ADMIN_COM_MODULE_LIST_ERROR_FILE_EXISTS);
	}

	if ($new_submit_validation = $filter->validated())
	{
		admin_informResult( $ftp->write("$name.$ext") );
	}
	else {
		echo $filter->errorMessage();
	}
}
if ( $new || ($new_submit && !$new_submit_validation) )
{
	$start_view = false;

	// Title
	echo '<h2>'.LANG_ADMIN_COM_MODULE_LIST_TITLE_NEW.'</h2>';

		$html = '';
	$form = new formManager();
	$html .= $form->form('post', $_SERVER['PHP_SELF'].$path, 'new_');

	$html .= $form->text('name', '', LANG_ADMIN_COM_MODULE_LIST_NAME_EXTENSION.'<br />');
	$html .= $form->select('ext', array('html'=>'.html', 'php'=>'.php'));

	$html .= $form->submit('submit', LANG_ADMIN_BUTTON_SUBMIT);
	$html .= $form->end();
	echo $html;
}



//////////////
// Start view
if ($start_view)
{
	// Title
	echo '<h2>'.LANG_ADMIN_COM_MODULE_LIST_TITLE_START.'</h2>';

	$html = '';

	$module_ftp = admin_comModule_readDir();

	// Fieldset : config (process)
	$session->init('use_html_editor', 0);
	$session->init('exlude_invalid_file', 0);
	if ($submit)
	{
		$filter->requestValue('use_html_editor')->get() ? $use_html_editor = '1' : $use_html_editor = '0';
		$session->set('use_html_editor', $use_html_editor);

		$filter->requestValue('exlude_invalid_file')->get() ? $exlude_invalid_file = '1' : $exlude_invalid_file = '0';
		$session->set('exlude_invalid_file', $exlude_invalid_file);
	}

	$form = new formManager(0);
	$html .= $form->form('post', $_SERVER['PHP_SELF'].$path, 'modlist_');

	$module_list_founded = ''; # See below explanation
	$module_list = array();
	for ($i=0; $i<count($module_ftp); $i++)
	{
		if (formManager_filter::isFile($module_ftp[$i], array('html', 'php'))) # Valid file name
		{
			$module_db = $db->select('module_list, *, where: file='.$db->str_encode($module_ftp[$i]));

			if (!$module_db) # New module detected! Insert it into database
			{
				$db->insert('module_list; '.$db->str_encode($module_ftp[$i]).", ''");
				$module_db = $db->select('module_list, *, where: file='.$db->str_encode($module_ftp[$i]));

				$span_l = '<span class="green">';
				$span_r = '</span>';
				$new = true;

				$used = '';
			}
			else
			{
				$span_l = '';
				$span_r = '';
				$new = false;

				// Is there a record of this module into the 'module' table ?
				$used = $db->selectCount('module, where: mod_file='.$db->str_encode($module_db[0]['file']));
				!$used ? $used = '' : '';
			}

			/*
			 * The filename is encoded for the 'name' attribute of the inputs.
			 *
			 * But for the 'id' attribute of the inputs we are using md5().
			 * Because of a small bug with jQuery selector : $('#del_myfile.php').click(); wich is not working...
			 */
			$encoded_file_name = formManager::encodePoint($module_db[0]['file']); # Some posted variables have to be encoded (see global_module.php for explanation)

			if ($new) {
				$module_list[$i]['delete'] = $png_new;
			} elseif (!$used) {
				$module_list[$i]['delete'] = $form->submit('del_'.$encoded_file_name, LANG_ADMIN_BUTTON_DELETE, 'del_'.md5($module_db[0]['file']), 'image=delete'); // (3)
			} else {
				$module_list[$i]['delete'] = '';
			}

			$module_list[$i]['file_for_order'		] = 			$module_db[0]['file']; # Below, we are using this to reorder the modules list. So, do not use $span_l and $span_r for this field
			$module_list[$i]['file'					] = $span_l.	$module_db[0]['file']		.$span_r;
			$module_list[$i]['comment'				] = $span_l.	$module_db[0]['comment']	.$span_r;

			$module_list[$i]['used'					] = $span_l.	$used						.$span_r;
			$module_list[$i]['update'				] = $span_l.$form->submit('upd_'.$encoded_file_name, LANG_ADMIN_BUTTON_UPDATE, 'upd_'.$module_db[0]['file'], 'image=update').$span_r; // (2)

			$module_list_founded .= ' where:file!='.$db->str_encode($module_ftp[$i]).' AND,'; # Prepare next query : List of founded ftp-modules
		}
		elseif (!$session->get('exlude_invalid_file')) # Invalid file
		{
			$span_l = '<span class="grey"><i>';
			$span_r = '</i></span>';

			$module_list[$i]['delete'				] = 			'';
			$module_list[$i]['file_for_order'		] = 			$module_ftp[$i];
			$module_list[$i]['file'					] = $span_l.	$module_ftp[$i]							.$span_r;
			$module_list[$i]['comment'				] = $span_l.	LANG_ADMIN_COM_MODULE_INVALID_FILE_NAME	.$span_r;

			$module_list[$i]['used'					] =				'';
			$module_list[$i]['update'				] = 			'';
		}
	}
	$module_list_founded ? $module_list_founded = substr($module_list_founded, 0, strlen($module_list_founded)-4) : ''; # Remove 'AND,' at the end of string

	// Modules wich are recorded into DB (but not exist into FTP)
	if (!$session->get('exlude_invalid_file'))
	{
		if ($module_list_founded)
		{
			$module_error = $db->select("module_list, *, $module_list_founded");
		} else {
			$module_error = $db->select('module_list, *');
		}

		$span_l = '<span class="red">';
		$span_r = '</span>';

		for ($i=0; $i<count($module_error); $i++)
		{
			// Is there a record of this module into the 'module' table ?
			if ($used = $db->selectCount('module, where: mod_file='.$db->str_encode($module_error[$i]['file'])))
			{
				$module_list[count($module_ftp)+$i]['delete'	] = 			'';
			} else {
				$encoded_file_name = formManager::encodePoint($module_error[$i]['file']);
				$module_list[count($module_ftp)+$i]['delete'	] = $form->submit('del_'.$encoded_file_name, LANG_ADMIN_BUTTON_DELETE, md5('del_'.$module_error[$i]['file']), 'image=delete'); // (3)
			}
	
			$module_list[count($module_ftp)+$i]['file_for_order'] = 		  	$module_error[$i]['file'];
			$module_list[count($module_ftp)+$i]['file'   		] = $span_l.	$module_error[$i]['file']		.$span_r;
	
			$module_error[$i]['comment'] = '<i>'.LANG_ADMIN_COM_MODULE_MISSING_FILE.'</i><br />'.$module_error[$i]['comment'];
			$module_list[count($module_ftp)+$i]['comment'		] = $span_l.	$module_error[$i]['comment']	.$span_r;
	
			!$used ? $used = '' : $used = $span_l.	$used	.$span_r;
			$module_list[count($module_ftp)+$i]['used'			] = 			$used;
	
			$module_list[count($module_ftp)+$i]['update'		] = 			'';
		}
	}

	// Re-order the modules list by 'name_for_order'
	if (count($module_list)) {
		usort($module_list, 'admin_comModule_orderByfile');
	}

	// Table
	$table = new tableManager($module_list);
	$table->delCol(1); # Delete the 'name_for_order' column wich is no use for now

	$table->header(array('', LANG_ADMIN_COM_MODULE_LIST_FILE, LANG_ADMIN_COM_MODULE_LIST_COMMENT, LANG_ADMIN_COM_MODULE_LIST_MODULE_USED, ''));
	$html .= $table->html();

	$html .= $form->submit('new', LANG_ADMIN_BUTTON_CREATE).'<br /><br />'; // (1)

	// Fieldset : config (form)
	$fieldset  = $form->checkbox('use_html_editor', $session->get('use_html_editor'), LANG_ADMIN_COM_MODULE_LIST_USE_HTML_EDITOR).'<br />';
	$fieldset .= $form->checkbox('exlude_invalid_file', $session->get('exlude_invalid_file'), LANG_ADMIN_COM_MODULE_LIST_EXLUDE_INVALID_FILE);
	$fieldset .= '<br /><br />'.$form->submit('submit', LANG_ADMIN_BUTTON_SUBMIT); // (0)
	$html .= admin_fieldset($fieldset, LANG_ADMIN_COM_MODULE_LIST_FIELDSET_CONFIG);

	$html .= $form->end();

	echo $html;
}

echo '<br /><a href="'.$_SERVER['PHP_SELF'].$path.'">'.LANG_ADMIN_BUTTON_REFRESH.'</a>';

?>